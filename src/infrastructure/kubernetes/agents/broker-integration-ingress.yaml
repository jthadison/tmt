apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: broker-integration-ingress
  namespace: tmt-production
  labels:
    app: broker-integration
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains";
spec:
  tls:
  - hosts:
    - broker-api.tmt.internal
    secretName: broker-integration-tls
  rules:
  - host: broker-api.tmt.internal
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: broker-integration-service
            port:
              number: 80
      - path: /health
        pathType: Exact
        backend:
          service:
            name: broker-integration-service
            port:
              number: 80
      - path: /ready
        pathType: Exact
        backend:
          service:
            name: broker-integration-service
            port:
              number: 80
      - path: /metrics
        pathType: Exact
        backend:
          service:
            name: broker-integration-service
            port:
              number: 9090
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: broker-integration-netpol
  namespace: tmt-production
  labels:
    app: broker-integration
spec:
  podSelector:
    matchLabels:
      app: broker-integration
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: tmt-production
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - podSelector:
        matchLabels:
          app: nginx-ingress
    ports:
    - protocol: TCP
      port: 8000
    - protocol: TCP
      port: 9090
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: vault-system
    ports:
    - protocol: TCP
      port: 8200
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80
---
apiVersion: v1
kind: Secret
metadata:
  name: broker-integration-secrets
  namespace: tmt-production
  labels:
    app: broker-integration
type: Opaque
data:
  # These should be injected by external secret management
  vault_token: ""  # Base64 encoded vault token
  api_secret_key: ""  # Base64 encoded API secret
  encryption_key: ""  # Base64 encoded encryption key