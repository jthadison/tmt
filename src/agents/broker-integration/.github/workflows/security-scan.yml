name: Container Security Scan

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/agents/broker-integration/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/agents/broker-integration/**'
  schedule:
    # Run weekly security scans
    - cron: '0 2 * * 1'

jobs:
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build container image
      working-directory: src/agents/broker-integration
      run: |
        docker build -t tmt/broker-integration:${{ github.sha }} .
        
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'tmt/broker-integration:${{ github.sha }}'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
        
    - name: Run Trivy vulnerability scanner (JSON)
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'tmt/broker-integration:${{ github.sha }}'
        format: 'json'
        output: 'trivy-results.json'
        
    - name: Dockerfile security scan
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: src/agents/broker-integration/Dockerfile
        format: sarif
        output-file: hadolint-results.sarif
        no-fail: true
        
    - name: Upload Hadolint scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: hadolint-results.sarif
        
    - name: Run comprehensive security scan
      working-directory: src/agents/broker-integration
      run: |
        chmod +x scan-image.sh
        ./scan-image.sh "tmt/broker-integration:${{ github.sha }}" || true
        
    - name: Archive security scan results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-scan-results-${{ github.sha }}
        path: |
          src/agents/broker-integration/security-scan-results/
          trivy-results.json
          trivy-results.sarif
          hadolint-results.sarif
        retention-days: 30
        
    - name: Check for critical vulnerabilities
      run: |
        # Fail the build if critical vulnerabilities are found
        CRITICAL_COUNT=$(jq '[.Results[]?.Vulnerabilities[]? | select(.Severity == "CRITICAL")] | length' trivy-results.json || echo 0)
        HIGH_COUNT=$(jq '[.Results[]?.Vulnerabilities[]? | select(.Severity == "HIGH")] | length' trivy-results.json || echo 0)
        
        echo "Critical vulnerabilities: $CRITICAL_COUNT"
        echo "High vulnerabilities: $HIGH_COUNT"
        
        if [ "$CRITICAL_COUNT" -gt 0 ]; then
          echo "❌ Critical vulnerabilities found - failing build"
          exit 1
        elif [ "$HIGH_COUNT" -gt 10 ]; then
          echo "⚠️  Too many high vulnerabilities found - review required"
          exit 1
        else
          echo "✅ Acceptable vulnerability level"
        fi
        
    - name: Comment PR with scan results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = 'trivy-results.json';
          
          if (fs.existsSync(path)) {
            const results = JSON.parse(fs.readFileSync(path, 'utf8'));
            let criticalCount = 0;
            let highCount = 0;
            let mediumCount = 0;
            
            results.Results?.forEach(result => {
              result.Vulnerabilities?.forEach(vuln => {
                switch(vuln.Severity) {
                  case 'CRITICAL': criticalCount++; break;
                  case 'HIGH': highCount++; break;
                  case 'MEDIUM': mediumCount++; break;
                }
              });
            });
            
            const comment = `## 🔒 Security Scan Results
            
            | Severity | Count |
            |----------|-------|
            | Critical | ${criticalCount} |
            | High | ${highCount} |
            | Medium | ${mediumCount} |
            
            ${criticalCount > 0 ? '❌ **Critical vulnerabilities found!**' : '✅ No critical vulnerabilities'}
            
            View detailed results in the [Actions tab](${context.payload.pull_request.html_url}/checks).`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }