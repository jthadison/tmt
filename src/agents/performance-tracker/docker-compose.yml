# Performance Tracker Agent Docker Compose
version: '3.8'

services:
  performance-tracker:
    build: .
    container_name: performance-tracker-agent
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://trading_user:trading_pass@postgres:5432/trading_db
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=info
      - ENVIRONMENT=development
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - trading-network
    restart: unless-stopped

  postgres:
    image: timescale/timescaledb:latest-pg15
    container_name: performance-tracker-db
    environment:
      - POSTGRES_DB=trading_db
      - POSTGRES_USER=trading_user  
      - POSTGRES_PASSWORD=trading_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - trading-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: performance-tracker-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - trading-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Optional: Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: performance-tracker-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - trading-network
    restart: unless-stopped
    profiles:
      - monitoring

  # Optional: Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: performance-tracker-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - trading-network
    restart: unless-stopped
    profiles:
      - monitoring
    depends_on:
      - prometheus

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  trading-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16