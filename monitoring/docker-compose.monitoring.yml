# Docker Compose for TMT Trading System Monitoring Stack
# Includes Prometheus, Grafana, AlertManager for production monitoring

version: '3.8'

services:
  # Prometheus - Metrics collection and alerting
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: tmt-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.time=30d'
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/trading_metrics.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml
      - prometheus_data:/prometheus
    networks:
      - tmt-monitoring
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.tmt.local`)"

  # Grafana - Visualization and dashboards
  grafana:
    image: grafana/grafana:10.0.3
    container_name: tmt-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=secure_admin_password
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/var/lib/grafana/dashboards/trading_dashboard.json
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/trading_dashboard.json:/var/lib/grafana/dashboards/trading_dashboard.json
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - tmt-monitoring
    restart: unless-stopped
    depends_on:
      - prometheus
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.tmt.local`)"

  # AlertManager - Alert routing and management
  alertmanager:
    image: prom/alertmanager:v0.26.0
    container_name: tmt-alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/config.yml:/etc/alertmanager/config.yml
      - alertmanager_data:/alertmanager
    networks:
      - tmt-monitoring
    restart: unless-stopped

  # Node Exporter - System metrics
  node-exporter:
    image: prom/node-exporter:v1.6.1
    container_name: tmt-node-exporter
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - tmt-monitoring
    restart: unless-stopped

  # PostgreSQL Exporter - Database metrics
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.13.2
    container_name: tmt-postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://username:password@postgres:5432/trading_db?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - tmt-monitoring
      - tmt-backend
    restart: unless-stopped
    depends_on:
      - postgres

  # Kafka Exporter - Message queue metrics
  kafka-exporter:
    image: danielqsj/kafka-exporter:v1.6.0
    container_name: tmt-kafka-exporter
    command: ["--kafka.server=kafka:9092"]
    ports:
      - "9308:9308"
    networks:
      - tmt-monitoring
      - tmt-backend
    restart: unless-stopped
    depends_on:
      - kafka

  # Loki - Log aggregation
  loki:
    image: grafana/loki:2.9.0
    container_name: tmt-loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki/local-config.yaml:/etc/loki/local-config.yaml
      - loki_data:/loki
    networks:
      - tmt-monitoring
    restart: unless-stopped

  # Promtail - Log shipper
  promtail:
    image: grafana/promtail:2.9.0
    container_name: tmt-promtail
    volumes:
      - /var/log:/var/log:ro
      - ./promtail/config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    networks:
      - tmt-monitoring
    restart: unless-stopped
    depends_on:
      - loki

  # Blackbox Exporter - Endpoint monitoring
  blackbox-exporter:
    image: prom/blackbox-exporter:v0.24.0
    container_name: tmt-blackbox-exporter
    ports:
      - "9115:9115"
    volumes:
      - ./blackbox/config.yml:/etc/blackbox_exporter/config.yml
    networks:
      - tmt-monitoring
    restart: unless-stopped

  # cAdvisor - Container monitoring
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: tmt-cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    networks:
      - tmt-monitoring
    restart: unless-stopped

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  alertmanager_data:
    driver: local
  loki_data:
    driver: local

networks:
  tmt-monitoring:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
  tmt-backend:
    external: true  # Connects to main application network

# Health checks and monitoring configuration
x-healthcheck-defaults: &healthcheck_defaults
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 40s

x-logging-defaults: &logging_defaults
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"