[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "adaptive-trading-system"
version = "0.1.0"
description = "AI-powered trading platform with 8 specialized agents"
authors = [{name = "Trading Team", email = "dev@trading-system.com"}]
license = {text = "Proprietary"}
readme = "README.md"
requires-python = ">=3.11.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Financial and Insurance Industry",
    "Programming Language :: Python :: 3.11",
    "Topic :: Office/Business :: Financial :: Investment",
]
dependencies = [
    "fastapi>=0.109.1",
    "uvicorn[standard]>=0.27.0",
    "pydantic>=2.6.0",
    "sqlalchemy>=2.0.25",
    "psycopg2-binary>=2.9.9",
    "redis>=5.0.1",
    "kafka-python>=2.0.2",
    "celery>=5.3.6",
    "prometheus-client>=0.19.0",
    "opentelemetry-api>=1.22.0",
    "crewai>=0.28.8",
    "numpy>=1.26.3",
    "pandas>=2.2.0",
    "scikit-learn>=1.4.0",
    "pydantic-settings>=2.1.0",
    "python-multipart>=0.0.6",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "httpx>=0.26.0",
    "aiofiles>=23.2.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.1",
    "pytest-asyncio>=0.23.4",
    "pytest-cov>=4.0.0",
    "black>=24.2.0",
    "isort>=5.13.2",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    "httpx>=0.26.0",
]
test = [
    "pytest>=8.0.1",
    "pytest-asyncio>=0.23.4",
    "pytest-cov>=4.0.0",
    "testcontainers>=3.7.1",
    "wiremock>=2.6.1",
]

[project.urls]
Homepage = "https://github.com/your-org/adaptive-trading-system"
Documentation = "https://docs.trading-system.com"
Repository = "https://github.com/your-org/adaptive-trading-system"
Issues = "https://github.com/your-org/adaptive-trading-system/issues"

# Black configuration
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | node_modules
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# MyPy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["agents", "shared"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\):",
    "@(abc\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"