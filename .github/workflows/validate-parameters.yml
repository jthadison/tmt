name: Validate Parameter Changes

on:
  pull_request:
    paths:
      - 'config/parameters/**'
  push:
    branches:
      - main
    paths:
      - 'config/parameters/**'

jobs:
  validate:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # Need previous commit for diff

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r agents/validation-pipeline/requirements.txt
          pip install -r backtesting/requirements.txt
          pip install -r agents/walk-forward/requirements.txt
          pip install -r agents/config-manager/requirements.txt

      - name: Get changed files
        id: changed-files
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep '^config/parameters/' | head -1)
          else
            CHANGED_FILES=$(git diff --name-only HEAD^ HEAD | grep '^config/parameters/' | head -1)
          fi

          if [ -z "$CHANGED_FILES" ]; then
            echo "No parameter config files changed"
            echo "config_file=" >> $GITHUB_OUTPUT
          else
            echo "Changed config file: $CHANGED_FILES"
            echo "config_file=$CHANGED_FILES" >> $GITHUB_OUTPUT
          fi

      - name: Run validation pipeline
        id: validation
        if: steps.changed-files.outputs.config_file != ''
        run: |
          python scripts/validate_parameters.py \
            --config-file "${{ steps.changed-files.outputs.config_file }}" \
            --output-file validation_results.json \
            --monte-carlo-runs 1000 \
            --parallel-workers 4
        continue-on-error: true

      - name: Generate Markdown report
        if: steps.changed-files.outputs.config_file != ''
        run: |
          python scripts/validate_parameters.py \
            --config-file "${{ steps.changed-files.outputs.config_file }}" \
            --output-file validation_report.md \
            --format markdown \
            --monte-carlo-runs 1000

      - name: Upload validation results
        if: steps.changed-files.outputs.config_file != ''
        uses: actions/upload-artifact@v3
        with:
          name: validation-results
          path: |
            validation_results.json
            validation_report.md

      - name: Read validation results
        if: steps.changed-files.outputs.config_file != ''
        id: read-results
        run: |
          if [ -f validation_results.json ]; then
            STATUS=$(python -c "import json; data=json.load(open('validation_results.json')); print(data['status'])")
            echo "status=$STATUS" >> $GITHUB_OUTPUT

            ALL_PASSED=$(python -c "import json; data=json.load(open('validation_results.json')); print(str(data['all_checks_passed']).lower())")
            echo "all_passed=$ALL_PASSED" >> $GITHUB_OUTPUT
          else
            echo "status=FAILED" >> $GITHUB_OUTPUT
            echo "all_passed=false" >> $GITHUB_OUTPUT
          fi

      - name: Post validation results to PR
        if: github.event_name == 'pull_request' && steps.changed-files.outputs.config_file != ''
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');

            // Read Markdown report
            let markdown = '';
            if (fs.existsSync('validation_report.md')) {
              markdown = fs.readFileSync('validation_report.md', 'utf8');
            } else {
              markdown = '## ❌ Validation Failed\n\nValidation pipeline encountered an error. Check workflow logs for details.';
            }

            // Post comment on PR
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: markdown
            });

      - name: Check validation status
        if: steps.changed-files.outputs.config_file != ''
        run: |
          if [ "${{ steps.read-results.outputs.all_passed }}" = "true" ]; then
            echo "✅ All validation checks passed"
            exit 0
          else
            echo "❌ Validation checks failed"
            exit 1
          fi

      - name: Comment on success
        if: steps.read-results.outputs.all_passed == 'true' && github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ **Parameter validation passed!** This PR is approved for merge.'
            });

      - name: Comment on failure
        if: steps.read-results.outputs.all_passed == 'false' && github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ **Parameter validation failed!** This PR cannot be merged until all validation checks pass. Review the validation report above for details.'
            });
